<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop" 
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                        http://www.springframework.org/schema/beans/spring-beans.xsd  
	                        http://www.springframework.org/schema/mvc 
	                        http://www.springframework.org/schema/mvc/spring-mvc.xsd 
	                        http://www.springframework.org/schema/context 
	                        http://www.springframework.org/schema/context/spring-context.xsd 
	                        http://www.springframework.org/schema/aop 
	                        http://www.springframework.org/schema/aop/spring-aop.xsd 
	                        http://www.springframework.org/schema/tx 
	                        http://www.springframework.org/schema/tx/spring-tx.xsd">
   		
	<!-- 
		创建数据库连接池,注入默认值
		当前使用是mysql8,需要配置 useSSL,serviceTimezone,characterEncoding,useUnicode=true
	-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="com.mysql.cj.jdbc.Driver"></property>
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/springDemo?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;serverTimezone=UTC"></property>
		<property name="user" value="root"></property>
		<property name="password" value="root"></property>
	</bean>
	
	<!-- 事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 事务属性 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		
		<tx:attributes>
			<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="page*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="*" propagation="REQUIRED" read-only="false"/>
		</tx:attributes>
		<!-- 
			propagation="REQUIRED"填写都以大写填写
			REUIRED(required)：如果当前有事务，就使用当前的事务，如果没有，就开启新事务
			SUPPORTS(supports)：如果当前有事务，就使用当前事务，如果没有，则不开启事务
			REQUIRES_NEW(requires_new)：如果当前有事务，则挂起当前事务，并开启新事务；否则直接开启新事务
			NOT_SUPPORTED(not_supported)：如果当前有事务，则挂起当前事务
			NESTED(nested)：如果当前有事务，则开启一个嵌套事务；如果当前没有事务，开启新事务
			MANDATORY(mandatory)：如果当前没有事务，则抛出异常
			NEVER(never)：如果当前有事务，则抛出异常	
		 -->
	<!-- 
		有四种数据库隔离级别： read_uncommitted： 完全没有隔离，会出现脏读、不可重复读和幻读 
		read_committed： 简单隔离，不会出现脏读 
		repeatable_read： 中度隔离，不会出现脏读、不可重复读 
		serializable： 完全隔离，不会出现脏读、不可重复读和幻读 
		MySQL的默认隔离级别是repeatable_read、Oracle的默认隔离级别是read_committed，Spring在事务管理中默认使用当前数据库的隔离级别（即isolation="DEFAULT"），在实际使用时如果没有特殊要求，默认即可 -->
	</tx:advice>
	
	
	<!-- 织入事务,advisor现在基本只在织入事务中使用 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.spring.db.UserService.*(..))" />
	</aop:config>
		
		
	<!-- Spring提供的JDBCTemplate对JDBC操作进行封装 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	    <property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<bean id="userDao" class="com.spring.db.UserDao">
	    <property name="jdbcTemplate" ref="jdbcTemplate"></property>
	</bean>
		
	<bean id="userService" class="com.spring.db.UserService">
	    <property name="userDao" ref="userDao"></property>
	</bean>
</beans>